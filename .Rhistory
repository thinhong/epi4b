library(simulist)
contact_distribution <- epiparameter::epidist(
disease = "COVID-19",
epi_dist = "contact distribution",
prob_distribution = "pois",
prob_distribution_params = c(mean = 2)
)
infectious_period <- epiparameter::epidist(
disease = "COVID-19",
epi_dist = "infectious period",
prob_distribution = "gamma",
prob_distribution_params = c(shape = 3, scale = 2)
)
onset_to_hosp <- epiparameter::epidist_db(
disease = "COVID-19",
epi_dist = "onset to hospitalisation",
single_epidist = TRUE
)
onset_to_death <- epiparameter::epidist_db(
disease = "COVID-19",
epi_dist = "onset to death",
single_epidist = TRUE
)
set.seed(1)
linelist <- sim_linelist(
contact_distribution = contact_distribution,
infectious_period = infectious_period,
onset_to_hosp = onset_to_hosp,
onset_to_death = onset_to_death,
case_type_probs = c(suspected = 0, probable = 0, confirmed = 1),
outbreak_size = c(1000, 2000),
hosp_risk = 0.2,
hosp_death_risk = 0.2,
anonymise = T,
population_age = c(0, 35),
outbreak_start_date = as.Date("2023-01-01")
)
View(linelist)
infectious_period <- epiparameter::epidist(
prob_distribution = "gamma",
prob_distribution_params = c(shape = 3, scale = 2)
)
set.seed(1)
p1 <- sim_linelist(
contact_distribution = contact_distribution,
infectious_period = infectious_period,
onset_to_hosp = onset_to_hosp,
onset_to_death = onset_to_death,
case_type_probs = c(suspected = 0, probable = 0, confirmed = 1),
outbreak_size = c(1000, 1500),
hosp_risk = 0.2,
hosp_death_risk = 0.2,
anonymise = T,
population_age = c(0, 35),
outbreak_start_date = as.Date("2023-01-01")
)
set.seed(7)
p2 <- sim_linelist(
contact_distribution = contact_distribution,
infectious_period = infectious_period,
onset_to_hosp = onset_to_hosp,
onset_to_death = onset_to_death,
case_type_probs = c(suspected = 0, probable = 0, confirmed = 1),
outbreak_size = c(800, 1000),
hosp_risk = 0.2,
hosp_death_risk = 0.2,
anonymise = T,
population_age = c(0, 35),
outbreak_start_date = as.Date("2023-04-01")
)
View(p1)
library(dplyr)
library(tidyr)
p1 |>
count(date_onset)
df_plot <- p1 |>
count(date_onset)
View(df_plot)
?count
p1 <- data.frame(p1)
df_plot <- p1 |>
count(date_onset)
str(p1$date_onset)
p1 |>
count(date_onset)
table(p1$date_onset)
library(lubridate)
str(p1$date_onset)
p1$date_onset <- ymd(p1$date_onset)
p1 |>
count(date_onset)
df_plot <- p1 |>
count(date_onset)
plot(df_plot)
df_plot <- p2 |>
count(date_onset)
plot(df_plot)
p2$date_onset <- ymd(p1$date_onset)
p2$date_onset <- ymd(p2$date_onset)
df_plot <- p2 |>
count(date_onset)
plot(df_plot)
p1$date_onset <- ymd(p1$date_onset)
df_plot <- p1 |>
count(date_onset)
plot(df_plot)
p2$date_onset <- ymd(p2$date_onset)
df_plot <- p2 |>
count(date_onset)
plot(df_plot)
p <- rbind(p1, p2)
df_plot <- p |>
count(date_onset)
plot(df_plot)
set.seed(8)
p2 <- sim_linelist(
contact_distribution = contact_distribution,
infectious_period = infectious_period,
onset_to_hosp = onset_to_hosp,
onset_to_death = onset_to_death,
case_type_probs = c(suspected = 0, probable = 0, confirmed = 1),
outbreak_size = c(800, 1000),
hosp_risk = 0.2,
hosp_death_risk = 0.2,
anonymise = T,
population_age = c(0, 35),
outbreak_start_date = as.Date("2023-04-01")
)
p <- rbind(p1, p2)
p$date_onset <- ymd(p$date_onset)
df_plot <- p |>
count(date_onset)
plot(df_plot)
set.seed(6)
p2 <- sim_linelist(
contact_distribution = contact_distribution,
infectious_period = infectious_period,
onset_to_hosp = onset_to_hosp,
onset_to_death = onset_to_death,
case_type_probs = c(suspected = 0, probable = 0, confirmed = 1),
outbreak_size = c(800, 1000),
hosp_risk = 0.2,
hosp_death_risk = 0.2,
anonymise = T,
population_age = c(0, 35),
outbreak_start_date = as.Date("2023-04-01")
)
p <- rbind(p1, p2)
p$date_onset <- ymd(p$date_onset)
df_plot <- p |>
count(date_onset)
plot(df_plot)
set.seed(6)
p2 <- sim_linelist(
contact_distribution = contact_distribution,
infectious_period = infectious_period,
onset_to_hosp = onset_to_hosp,
onset_to_death = onset_to_death,
case_type_probs = c(suspected = 0, probable = 0, confirmed = 1),
outbreak_size = c(800, 1000),
hosp_risk = 0.2,
hosp_death_risk = 0.2,
anonymise = T,
population_age = c(0, 35),
outbreak_start_date = as.Date("2023-05-01")
)
p <- rbind(p1, p2)
p$date_onset <- ymd(p$date_onset)
df_plot <- p |>
count(date_onset)
plot(df_plot)
set.seed(6)
p2 <- sim_linelist(
contact_distribution = contact_distribution,
infectious_period = infectious_period,
onset_to_hosp = onset_to_hosp,
onset_to_death = onset_to_death,
case_type_probs = c(suspected = 0, probable = 0, confirmed = 1),
outbreak_size = c(1000, 1200),
hosp_risk = 0.2,
hosp_death_risk = 0.2,
anonymise = T,
population_age = c(0, 35),
outbreak_start_date = as.Date("2023-05-01")
)
p <- rbind(p1, p2)
p$date_onset <- ymd(p$date_onset)
df_plot <- p |>
count(date_onset)
plot(df_plot)
library(simulist)
library(dplyr)
library(tidyr)
library(lubridate)
contact_distribution <- epiparameter::epidist(
disease = "COVID-19",
epi_dist = "contact distribution",
prob_distribution = "pois",
prob_distribution_params = c(mean = 2)
)
infectious_period <- epiparameter::epidist(
disease = "COVID-19",
epi_dist = "infectious period",
prob_distribution = "gamma",
prob_distribution_params = c(shape = 3, scale = 2)
)
onset_to_hosp <- epiparameter::epidist_db(
disease = "COVID-19",
epi_dist = "onset to hospitalisation",
single_epidist = TRUE
)
onset_to_death <- epiparameter::epidist_db(
disease = "COVID-19",
epi_dist = "onset to death",
single_epidist = TRUE
)
set.seed(1)
p1 <- sim_linelist(
contact_distribution = contact_distribution,
infectious_period = infectious_period,
onset_to_hosp = onset_to_hosp,
onset_to_death = onset_to_death,
case_type_probs = c(suspected = 0, probable = 0, confirmed = 1),
outbreak_size = c(1000, 1500),
hosp_risk = 0.2,
hosp_death_risk = 0.2,
anonymise = T,
population_age = c(0, 35),
outbreak_start_date = as.Date("2023-01-01")
)
set.seed(6)
p2 <- sim_linelist(
contact_distribution = contact_distribution,
infectious_period = infectious_period,
onset_to_hosp = onset_to_hosp,
onset_to_death = onset_to_death,
case_type_probs = c(suspected = 0, probable = 0, confirmed = 1),
outbreak_size = c(1000, 1200),
hosp_risk = 0.2,
hosp_death_risk = 0.2,
anonymise = T,
population_age = c(0, 35),
outbreak_start_date = as.Date("2023-05-01")
)
p <- rbind(p1, p2)
p$date_onset <- ymd(p$date_onset)
df_plot <- p |>
count(date_onset)
plot(df_plot)
set.seed(10)
p2 <- sim_linelist(
contact_distribution = contact_distribution,
infectious_period = infectious_period,
onset_to_hosp = onset_to_hosp,
onset_to_death = onset_to_death,
case_type_probs = c(suspected = 0, probable = 0, confirmed = 1),
outbreak_size = c(1000, 1200),
hosp_risk = 0.2,
hosp_death_risk = 0.2,
anonymise = T,
population_age = c(0, 35),
outbreak_start_date = as.Date("2023-05-01")
)
p <- rbind(p1, p2)
p$date_onset <- ymd(p$date_onset)
df_plot <- p |>
count(date_onset)
plot(df_plot)
set.seed(11)
p2 <- sim_linelist(
contact_distribution = contact_distribution,
infectious_period = infectious_period,
onset_to_hosp = onset_to_hosp,
onset_to_death = onset_to_death,
case_type_probs = c(suspected = 0, probable = 0, confirmed = 1),
outbreak_size = c(1000, 1200),
hosp_risk = 0.2,
hosp_death_risk = 0.2,
anonymise = T,
population_age = c(0, 35),
outbreak_start_date = as.Date("2023-05-01")
)
p <- rbind(p1, p2)
p$date_onset <- ymd(p$date_onset)
df_plot <- p |>
count(date_onset)
plot(df_plot)
set.seed(12)
p2 <- sim_linelist(
contact_distribution = contact_distribution,
infectious_period = infectious_period,
onset_to_hosp = onset_to_hosp,
onset_to_death = onset_to_death,
case_type_probs = c(suspected = 0, probable = 0, confirmed = 1),
outbreak_size = c(1000, 1200),
hosp_risk = 0.2,
hosp_death_risk = 0.2,
anonymise = T,
population_age = c(0, 35),
outbreak_start_date = as.Date("2023-05-01")
)
p <- rbind(p1, p2)
p$date_onset <- ymd(p$date_onset)
df_plot <- p |>
count(date_onset)
plot(df_plot)
set.seed(17)
p2 <- sim_linelist(
contact_distribution = contact_distribution,
infectious_period = infectious_period,
onset_to_hosp = onset_to_hosp,
onset_to_death = onset_to_death,
case_type_probs = c(suspected = 0, probable = 0, confirmed = 1),
outbreak_size = c(1000, 1200),
hosp_risk = 0.2,
hosp_death_risk = 0.2,
anonymise = T,
population_age = c(0, 35),
outbreak_start_date = as.Date("2023-05-01")
)
p <- rbind(p1, p2)
p$date_onset <- ymd(p$date_onset)
df_plot <- p |>
count(date_onset)
plot(df_plot)
set.seed(27)
p2 <- sim_linelist(
contact_distribution = contact_distribution,
infectious_period = infectious_period,
onset_to_hosp = onset_to_hosp,
onset_to_death = onset_to_death,
case_type_probs = c(suspected = 0, probable = 0, confirmed = 1),
outbreak_size = c(1000, 1200),
hosp_risk = 0.2,
hosp_death_risk = 0.2,
anonymise = T,
population_age = c(3, 35),
outbreak_start_date = as.Date("2023-05-01")
)
p <- rbind(p1, p2)
p$date_onset <- ymd(p$date_onset)
df_plot <- p |>
count(date_onset)
plot(df_plot)
set.seed(17)
p2 <- sim_linelist(
contact_distribution = contact_distribution,
infectious_period = infectious_period,
onset_to_hosp = onset_to_hosp,
onset_to_death = onset_to_death,
case_type_probs = c(suspected = 0, probable = 0, confirmed = 1),
outbreak_size = c(1000, 1200),
hosp_risk = 0.2,
hosp_death_risk = 0.2,
anonymise = T,
population_age = c(3, 35),
outbreak_start_date = as.Date("2023-05-01")
)
p <- rbind(p1, p2)
p$date_onset <- ymd(p$date_onset)
df_plot <- p |>
count(date_onset)
plot(df_plot)
p$week_onset <- floor_date(p$date_onset, "week")
df_plot <- p |>
count(week_onset)
plot(df_plot)
df_plot <- p |>
count(date_onset)
plot(df_plot)
systemfonts::system_fonts() |> View()
systemfonts::system_fonts() |> View()
trees
library()
library(dplyr)
library(ggplot2)
trees |>
ggplot(aes(
x = Girth,
y = Height,
size = Volume,
colour = Volume
)) +
geom_point() +
theme_minimal() +
theme(text = element_text(family = "Nunito Sans"), legend.position = "none")
trees |>
ggplot(aes(
x = Girth,
y = Height,
size = Volume,
colour = Volume
)) +
geom_point() +
labs(title = "Did the font work? Let's hope so!") +
theme_minimal() +
theme(text = element_text(family = "Nunito Sans"), legend.position = "none")
library(patchwork)
p1 <- trees |>
ggplot(aes(
x = Girth,
y = Height,
size = Volume,
colour = Volume
)) +
geom_point() +
labs(title = "Did the font work? Let's hope so!") +
theme_minimal() +
theme(text = element_text(family = "Nunito Sans"), legend.position = "none")
p2 <- trees |>
ggplot(aes(
x = Girth,
y = Height,
size = Volume,
colour = Volume
)) +
geom_point() +
labs(title = "Did the font work? Let's hope so!") +
theme_minimal() +
theme(legend.position = "none")
p1 / p2
p1 | p2
p2 <- trees |>
ggplot(aes(
x = Girth,
y = Height,
size = Volume,
colour = Volume
)) +
geom_point() +
labs(title = "Did the font work? Let's hope so!") +
theme_minimal() +
theme(text = element_text(family = "Karla"), legend.position = "none")
p1 <- trees |>
ggplot(aes(
x = Girth,
y = Height,
size = Volume,
colour = Volume
)) +
geom_point() +
labs(title = "Did the font work? Let's hope so!") +
theme_minimal() +
theme(text = element_text(family = "Nunito Sans"), legend.position = "none")
p2 <- trees |>
ggplot(aes(
x = Girth,
y = Height,
size = Volume,
colour = Volume
)) +
geom_point() +
labs(title = "Did the font work? Let's hope so!") +
theme_minimal() +
theme(text = element_text(family = "Karla"), legend.position = "none")
p1 | p2
knitr::opts_chunk$set(echo = TRUE,
dev = "ragg_png",
dpi = 400,)
knitr::opts_chunk$set(echo = TRUE,
dev = "ragg_png",
dpi = 400)
p1 <- trees |>
ggplot(aes(
x = Girth,
y = Height,
size = Volume,
colour = Volume
)) +
geom_point() +
labs(title = "Nunito Sans") +
theme_minimal() +
theme(text = element_text(family = "Nunito Sans"), legend.position = "none")
p2 <- trees |>
ggplot(aes(
x = Girth,
y = Height,
size = Volume,
colour = Volume
)) +
geom_point() +
labs(title = "Karla") +
theme_minimal() +
theme(text = element_text(family = "Karla"), legend.position = "none")
p1 | p2
#| code-fold: true
#| fig-width: 6
#| fig-height: 3
#| out-width: "100%"
p1 <- trees |>
ggplot(aes(
x = Girth,
y = Height,
size = Volume,
colour = Volume
)) +
geom_point() +
labs(title = "Nunito Sans") +
theme_minimal() +
theme(text = element_text(family = "Nunito Sans"), legend.position = "none")
p2 <- trees |>
ggplot(aes(
x = Girth,
y = Height,
size = Volume,
colour = Volume
)) +
geom_point() +
labs(title = "Karla") +
theme_minimal() +
theme(text = element_text(family = "Karla"), legend.position = "none")
p1 | p2
